import React, { useEffect, useState } from 'react';
import { getDonationsByGroupAndFieldType } from '@/actions/users';
import { ChevronDown, Download, Image } from 'lucide-react';
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { jsPDF } from "jspdf";
import "jspdf-autotable";
import html2canvas from 'html2canvas-pro';

const UserDonationsTableAll = ({ userId, group, field_type }) => {
  const [donationsData, setDonationsData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [activeTab, setActiveTab] = useState(null);
  const [dropdownOpen, setDropdownOpen] = useState(false);

  useEffect(() => {
    const fetchDonations = async () => {
      try {
        const data = await getDonationsByGroupAndFieldType({ userId, group, field_type });
        console.log('donations', data);
        setDonationsData(data);
        if (data.length > 0) setActiveTab(data[0].donations[0].name);
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchDonations();
  }, [userId, group, field_type]);

  const handleDownloadPDF = () => {
    if (!activeTab) {
      toast.error("Please select a donation to download data.");
      return;
    }

    const doc = new jsPDF();

    // Format Group Name (Remove underscores and capitalize words)
    const formattedGroup = group.replace(/_/g, ' ').replace(/\b\w/g, (char) => char.toUpperCase());

    // Get Current Date and Time
    const currentDate = new Date();
    const formattedDate = currentDate.toLocaleDateString();
    const formattedTime = currentDate.toLocaleTimeString();

    // Add Header Section with Purple Theme
    doc.setFont("helvetica", "bold");
    doc.setTextColor(128, 0, 128); // Purple color
    doc.setFontSize(20);
    doc.text("KKKT USHARIKA WA YOMBO", 105, 15, { align: "center" });
    
    doc.text(`${formattedGroup}`, 105, 25);

    doc.setFontSize(14);
    doc.text(`Mchango: ${activeTab}`, 14, 40, { align: "center" });
    doc.text(`Tarehe: ${formattedDate} | Muda: ${formattedTime}`, 14, 50);

    // Add Purple Table Headers and Donation Data
    const headers = ['Username', 'Kilicholipwa', 'Kinachotakiwa', 'Balance'];

    // Filter donations based on the selected name (activeTab)
    const activeDonationData = donationsData
      .flatMap(user => user.donations.map(donation => ({ username: user.username, ...donation })))
      .filter(donation => donation.name === activeTab);

    const body = activeDonationData.map(donation => [
      donation.username,
      donation.amountPaid,
      donation.total,
      donation.total - donation.amountPaid, // Calculate balance
    ]);

    doc.autoTable({
      head: [headers],
      body: body,
      startY: 60,
      theme: "grid",
      headStyles: {
        fillColor: [128, 0, 128], // Purple background
        textColor: [255, 255, 255], // White text
      },
      styles: {
        fontSize: 10,
        cellPadding: 3,
      },
      alternateRowStyles: {
        fillColor: [240, 230, 250], // Light purple for alternate rows
      },
      margin: { top: 10, left: 10, right: 10, bottom: 10 },
    });

    // Add Total Summary Below the Table
    const totalDonation = activeDonationData.reduce((acc, curr) => acc + curr.amountPaid, 0);
    const totalKuu = activeDonationData.reduce((acc, curr) => acc + curr.total, 0);

    const summaryStartY = doc.autoTable.previous.finalY + 10;

    doc.setFontSize(12);
    doc.setTextColor(0, 0, 0);
    doc.text(`Total Kilicholipwa: ${totalDonation}`, 14, summaryStartY);
    doc.text(`Total Inayotarajiwa: ${totalKuu}`, 14, summaryStartY + 10);
    doc.text(`Total Balance ambayo Haijalipwa: ${totalKuu - totalDonation}`, 14, summaryStartY + 20);

    // Add Footer Section with Purple Color
    const pageHeight = doc.internal.pageSize.height;
    doc.setFont("helvetica", "italic");
    doc.setFontSize(10);
    doc.setTextColor(128, 0, 128);

    doc.text("Generated by KKKT Usharika Wa Yombo System", 105, pageHeight - 10, { align: "center" });

    // Save the PDF with the selected donation name in the filename
    doc.save(`${activeTab}_donations.pdf`);
  };

  const handleDownloadImage = async () => {
    if (!activeTab) {
      toast.error("Please select a donation to download data.");
      return;
    }
  
    // Get the container element to capture
    const elementToCapture = document.getElementById('capture-area');
    if (!elementToCapture) {
      toast.error("Capture area not found.");
      return;
    }
  
    try {
      // Render the element to a canvas
      const canvas = await html2canvas(elementToCapture, {
        backgroundColor: "#ffffff",
        useCORS: true,
      });
  
      // Convert the canvas to an image
      const imgData = canvas.toDataURL("image/png");
  
      // Trigger download
      const link = document.createElement("a");
      link.href = imgData;
      link.download = `${activeTab}_donations.png`;
      link.click();
    } catch (error) {
      console.error("Error capturing the element:", error);
      toast.error("Failed to generate image. Please try again.");
    }
  };

  // Group donations by name
  const donationNames = Array.from(new Set(donationsData.flatMap(user => user.donations.map(donation => donation.name))));

  const totalDonation = donationsData
    .flatMap(user => user.donations)
    .filter(donation => donation.name === activeTab)
    .reduce((acc, donation) => acc + donation.amountPaid, 0);

  const totalKuu = donationsData
    .flatMap(user => user.donations)
    .filter(donation => donation.name === activeTab)
    .reduce((acc, donation) => acc + donation.total, 0);

  return (
    <div className="max-w-7xl mx-auto p-6 space-y-6">
      {loading && (
        <div className="glass p-4 rounded-2xl border border-primary-200 animate-pulse">
          <div className="flex items-center space-x-3">
            <div className="w-5 h-5 bg-primary-300 rounded-full animate-pulse-soft"></div>
            <p className="text-primary-700 font-medium">Loading donations...</p>
          </div>
        </div>
      )}

      {error && (
        <div className="bg-gradient-to-r from-error-50 to-error-100 border border-error-200 p-4 rounded-2xl">
          <div className="flex items-center space-x-3">
            <div className="w-5 h-5 bg-error-500 rounded-full"></div>
            <p className="text-error-700 font-medium">{error}</p>
          </div>
        </div>
      )}

      {!loading && !error && donationsData.length === 0 && (
        <div className="bg-gradient-to-r from-warning-50 to-warning-100 border border-warning-200 p-6 rounded-2xl text-center">
          <div className="w-16 h-16 bg-warning-200 rounded-full mx-auto mb-4 flex items-center justify-center">
            <span className="text-warning-600 text-2xl">ðŸ’°</span>
          </div>
          <p className="text-warning-700 font-medium text-lg">Hakuna Michango yoyote kwa sasa</p>
        </div>
      )}

      {!loading && !error && donationsData.length > 0 && (
        <div className="space-y-6">
          {/* Custom Dropdown for Donation Names */}
          <div className="relative">
            <button
              onClick={() => setDropdownOpen(!dropdownOpen)}
              className="w-full sm:w-auto min-w-[300px] flex items-center justify-between px-6 py-4 bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white font-semibold rounded-2xl shadow-primary-lg transition-all duration-300 hover:shadow-primary-lg hover:scale-105"
            >
              <span className="text-lg">{activeTab || 'Select Donation'}</span>
              <ChevronDown className={`w-5 h-5 transition-transform duration-300 ${dropdownOpen ? 'rotate-180' : ''}`} />
            </button>

            {dropdownOpen && (
              <div className="absolute z-50 w-full mt-2 bg-white rounded-2xl shadow-strong border border-border-light overflow-hidden animate-slide-down">
                {donationNames.map((donationName, idx) => (
                  <button
                    key={idx}
                    onClick={() => {
                      setActiveTab(donationName);
                      setDropdownOpen(false);
                    }}
                    className={`w-full px-6 py-4 text-left hover:bg-primary-50 transition-colors duration-200 ${
                      activeTab === donationName 
                        ? 'bg-primary-100 text-primary-800 font-semibold border-l-4 border-primary-600' 
                        : 'text-text-primary hover:text-primary-700'
                    } ${idx !== donationNames.length - 1 ? 'border-b border-border-light' : ''}`}
                  >
                    {donationName}
                  </button>
                ))}
              </div>
            )}
          </div>

          {/* Active Donation Content */}
          {activeTab && (
            <div className="space-y-6">
              {donationsData
                .flatMap(user => user.donations)
                .filter(donation => donation.name === activeTab).length === 0 ? (
                  <div className="bg-gradient-to-r from-warning-50 to-warning-100 border border-warning-200 p-6 rounded-2xl text-center">
                    <p className="text-warning-700 font-medium">Hakuna Michango kwenye hichi kikundi</p>
                  </div>
                ) : (
                  <>
                    <div id="capture-area" className="bg-white rounded-3xl shadow-strong overflow-hidden border border-border-light">
                      {/* Table Header */}
                      <div className="bg-gradient-to-r from-primary-600 to-primary-700 px-6 py-4">
                        <h3 className="text-white font-bold text-xl">{activeTab}</h3>
                      </div>

                      {/* Table Content */}
                      <div className="overflow-x-auto">
                        <table className="w-full">
                          <thead className="bg-gradient-to-r from-primary-50 to-primary-100">
                            <tr>
                              <th className="px-6 py-4 text-left font-bold text-primary-800">Jina</th>
                              <th className="px-6 py-4 text-left font-bold text-primary-800">Kilicholipwa</th>
                              <th className="px-6 py-4 text-left font-bold text-primary-800">Kinachotakiwa</th>
                              <th className="px-6 py-4 text-left font-bold text-primary-800">Balance</th>
                            </tr>
                          </thead>
                          <tbody>
                            {donationsData
                              .flatMap(user => user.donations.map(donation => ({ username: user.username, ...donation })))
                              .filter(donation => donation.name === activeTab)
                              .map((donation, idx) => (
                                <tr 
                                  key={donation._id || idx}
                                  className={`border-b border-border-light hover:bg-primary-25 transition-colors duration-200 ${
                                    idx % 2 === 0 ? 'bg-background-50' : 'bg-white'
                                  }`}
                                >
                                  <td className="px-6 py-4 font-semibold text-text-primary">{donation.username}</td>
                                  <td className="px-6 py-4 text-success-600 font-medium">
                                    {donation.amountPaid.toLocaleString()}
                                  </td>
                                  <td className="px-6 py-4 text-text-secondary font-medium">
                                    {donation.total.toLocaleString()}
                                  </td>
                                  <td className={`px-6 py-4 font-bold ${
                                    (donation.total - donation.amountPaid) > 0 ? 'text-warning-600' : 'text-success-600'
                                  }`}>
                                    {(donation.total - donation.amountPaid).toLocaleString()}
                                  </td>
                                </tr>
                              ))}
                          </tbody>
                        </table>
                      </div>

                      {/* Summary Section */}
                      <div className="bg-gradient-to-r from-background-100 to-background-200 p-6 space-y-3">
                        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                          <div className="bg-success-50 p-4 rounded-xl border border-success-200">
                            <p className="text-success-800 font-bold text-lg">
                              Total Kilicholipwa: 
                              <span className="block text-2xl">{totalDonation.toLocaleString()}</span>
                            </p>
                          </div>
                          <div className="bg-primary-50 p-4 rounded-xl border border-primary-200">
                            <p className="text-primary-800 font-bold text-lg">
                              Total Inayotarajiwa: 
                              <span className="block text-2xl">{totalKuu.toLocaleString()}</span>
                            </p>
                          </div>
                          <div className="bg-warning-50 p-4 rounded-xl border border-warning-200">
                            <p className="text-warning-800 font-bold text-lg">
                              Balance Haijalipwa: 
                              <span className="block text-2xl">{(totalKuu - totalDonation).toLocaleString()}</span>
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>

                    {/* Download Buttons */}
                    <div className="flex flex-col sm:flex-row gap-4">
                      <button
                        onClick={handleDownloadPDF}
                        className="flex items-center justify-center space-x-3 px-8 py-4 bg-gradient-to-r from-success-600 to-success-700 hover:from-success-700 hover:to-success-800 text-white font-bold rounded-2xl shadow-success-lg transition-all duration-300 hover:shadow-success-lg hover:scale-105"
                      >
                        <Download className="w-5 h-5" />
                        <span>Download PDF</span>
                      </button>
                      <button
                        onClick={handleDownloadImage}
                        className="flex items-center justify-center space-x-3 px-8 py-4 bg-gradient-to-r from-yellow-600 to-yellow-700 hover:from-yellow-700 hover:to-yellow-800 text-white font-bold rounded-2xl shadow-yellow-lg transition-all duration-300 hover:shadow-yellow-lg hover:scale-105"
                      >
                        <Image className="w-5 h-5" />
                        <span>Download Picha</span>
                      </button>
                    </div>
                  </>
                )}
            </div>
          )}
        </div>
      )}

      {/* Toast Container */}
      <ToastContainer 
        position="top-right"
        autoClose={3000}
        hideProgressBar={false}
        newestOnTop
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="light"
        toastClassName="rounded-2xl shadow-strong"
      />
    </div>
  );
};

export default UserDonationsTableAll;